name: Tests

on:
  push:
    tags:
      - v**
    branches-ignore:
      - "dependabot/**"
      - "sourcery/**"
  pull_request:

jobs:
  misspell:
    name: misspell
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: misspell
        uses: reviewdog/action-misspell@v1
        with:
          reporter: github-pr-review
          github_token: ${{ secrets.github_token }}
          level: warning
          locale: "US"

  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7
      - name: Run pre-commit
        uses: pre-commit/action@v3.0.0

  check-manifest:
    name: Check Manifest
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install check manifest
        run: python -m pip install check-manifest
      - name: Run check manifest
        run: check-manifest

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          conda-channels: conda-forge
      - name: Install dependencies
        run: |
          conda install -y pandoc
          pip install -U -q -r docs/requirements.txt
          pip install .
      - name: Show installed dependencies
        run: |
          pip freeze
          pandoc -v
      - name: Build docs
        run: make --directory=docs clean_all html

  docs-link:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          conda-channels: conda-forge
      - name: Install dependencies
        run: |
          conda install -y pandoc
          pip install -U -q -r docs/requirements.txt
          pip install .
      - name: Show installed dependencies
        continue-on-error: true
        run: |
          pip freeze
          pandoc -v
      - name: Build docs
        run: make --directory=docs clean_all linkcheck

  flake8-nightly:
    runs-on: ubuntu-latest
    needs: [pre-commit, docs]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: 3.7
      - name: Install dependencies
        env:
          TOX_ENV_NAME: flake8-nightly
        run: |
          python -m pip install -U pip
          python -m pip install -U -r requirements_dev.txt
          pip install .
          python -m pip install --force-reinstall -U -q git+https://gitlab.com/pycqa/flake8.git
      - name: Show flake8 version
        run: |
          pip freeze | grep flake8
      - name: Run tests
        run: |
          python -m pytest -vv --cov=./ --cov-report term --cov-report xml --cov-config .coveragerc tests
      - name: Codecov Upload
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          name: flake8-nightly

  flake8-legacy:
    runs-on: ubuntu-latest
    needs: [pre-commit, docs]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install .
          python -m pip install -U -r requirements_dev.txt
          python -m pip install -U -q 'flake8==3.7.0'
      - name: Show flake8 version
        run: |
          pip freeze | grep flake8
      - name: Run tests
        run: |
          python -m pytest -vv --cov=./ --cov-report term --cov-report xml --cov-config .coveragerc tests
      - name: Codecov Upload
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          name: flake8-legacy

  test:
    runs-on: ${{ matrix.os }}
    needs: [pre-commit, docs]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: [3.7, 3.8, 3.9, "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          python -m pip install -U -r requirements_dev.txt
          pip install .
      - name: Run tests
        run: |
          python -m pytest --cov=./ --cov-report term --cov-report xml --cov-config .coveragerc tests
      - name: Codecov Upload
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          name: ${{ matrix.os }}-py${{ matrix.python-version }}

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    needs: [test, flake8-nightly, flake8-legacy]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: 3.7
      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -U -r requirements_dev.txt
          pip install -U .
      - name: Build dist
        run: |
          python setup.py sdist bdist_wheel

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
