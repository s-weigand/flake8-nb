[tox]
minversion = 3.4.0
skip_missing_interpreters=true
envlist = py{36,37,38,39}, flake8-nightly, flake8-legacy, pre-commit, docs, docs-links


[flake8]
max-line-length = 99
exclude=
    *.ipynb_checkpoints/*
    *.tox*
    tests/data/notebooks/*

[flake8_nb]
max-line-length = 100
; exclude=
;     *.ipynb_checkpoints/*
;     *.tox*
; filename=
;     *.ipynb_parsed
;     *.py

[testenv:docs]
whitelist_externals = make
commands =
    make --directory=docs clean_all html

[testenv:docs-links]
whitelist_externals = make
commands =
    make --directory=docs clean_all linkcheck


[testenv:pre-commit]
basepython=python
skip_install=true
commands_pre =
  {envpython} -m pip install -U -q pre-commit
commands=pre-commit run --all

[testenv:flake8-nightly]
passenv = *
commands_pre =
  {[testenv]commands_pre}
  {envpython} -m pip install -U -q git+https://gitlab.com/pycqa/flake8.git
commands =
  {envpython}  -c "import flake8_nb;print('FLAKE8 VERSION: ', flake8_nb.FLAKE8_VERSION_TUPLE)"
  py.test -vv --cov=flake8_nb --cov-append --cov-config .coveragerc tests

[testenv:flake8-legacy]
passenv = *
commands_pre =
  {[testenv]commands_pre}
  {envpython} -m pip install -U -q 'flake8==3.7.0'
commands =
  py.test -vv --cov=flake8_nb --cov-append --cov-config .coveragerc tests

[testenv]
passenv = *
install_command=python -m pip install {opts} {packages}
commands_pre =
  {envpython} -m pip install -U -q -r {toxinidir}/requirements_dev.txt
commands = py.test --cov=flake8_nb --cov-append --cov-config .coveragerc tests
