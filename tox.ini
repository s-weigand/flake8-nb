[tox]
minversion = 3.4.0
skip_missing_interpreters=true
envlist = py{37,38,39,310}, flake8-nightly, flake8-legacy, pre-commit, docs, docs-links


[flake8_nb]
max-line-length = 100
; notebook_cell_format = {nb_path}#In[{exec_count}]test
; exclude=
;     *.ipynb_checkpoints/*
;     *.tox*
; filename=
;     *.ipynb_parsed
;     *.py

[pytest]
addopts = --cov=. --cov-report term --cov-report xml --cov-report html --cov-config=pyproject.toml
filterwarnings =
    ignore:.*not_a_notebook.ipynb

[testenv:docs]
whitelist_externals = make
commands =
    make --directory=docs clean_all html

[testenv:docs-links]
whitelist_externals = make
commands =
    make --directory=docs clean_all linkcheck


[testenv:pre-commit]
basepython=python
skip_install=true
commands_pre =
  {envpython} -m pip install -U -q pre-commit
commands=pre-commit run --all

[testenv:flake8-nightly]
passenv = *
commands_pre =
  {[testenv]commands_pre}
  {envpython} -m pip install -U -q --force-reinstall git+https://github.com/pycqa/flake8
commands =
  {envpython} -c "import flake8_nb;print('FLAKE8 VERSION: ', flake8_nb.FLAKE8_VERSION_TUPLE)"
  {envpython} -m pytest -vv

[testenv:flake8-legacy]
passenv = *
commands_pre =
  {[testenv]commands_pre}
  {envpython} -m pip install -U -q 'flake8==3.8.0'
commands =
  {envpython} -m pytest -vv

[testenv]
passenv = *
install_command=python -m pip install {opts} {packages}
commands_pre =
  {envpython} -m pip install -U -q -r {toxinidir}/requirements_dev.txt
commands =
  {envpython} -m pytest
